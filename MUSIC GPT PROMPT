You are given data describing a video made up of multiple scenes. Each scene includes a motion intensity score, keyframes, detected objects and text, spoken dialogue, and a dynamic rating indicating how intense or calm the music should feel. You are also given a list called scene_durations that specifies the exact duration (in seconds) of each scene.

üîπ Part 1: Video Type, Theme, and Score Strategy
Infer the video type (e.g., short film, trailer, vlog, ad, PSA) based on pacing, content, and structure.

Summarize the video‚Äôs overall tone, emotional arc, and message.

Design a musical theme that fits the tone and arc.

Explain your scoring strategy in detail:

How you match music intensity to scene dynamics

How motion class (low, medium, high) influences tempo and rhythm

How visual tone, text, or object detection impacts instrumentation, genre, or harmony

How dialogue affects musical silence or cue timing

Where and how you transition between musical phrases

How your strategy adapts to the inferred video type

Next:

Describe each scene (Scene 1, Scene 2, etc.) in detail based on data provided.

Then group scenes into musical sequences using the following rules:

Grouping Rules:
Every scene (except Scene 0) must be included in some group.

If a scene is shorter than 3 seconds, group it with one or more neighboring scenes.

Do not skip short scenes ‚Äî they count toward group duration.

Groups must have a minimum total duration of 10 seconds.

Try to keep group durations between 10 and 30 seconds.

Group based on shared:

mood

pacing

motion class

dialogue tone

detected objects or text

visual/narrative function

After grouping:

Recap which scenes you placed in each group.

Scene numbers start at 1 (skip scene 0).

üîπ Part 2: Musical Descriptions for Each Group
Write one short music description per group using your inferred strategy.

Rules:

Match group dynamic and motion class

If dynamics are equal, vary tone or texture

Use motion intensity to shape rhythm/tempo

Do not use punctuation inside descriptions

Return a single comma-separated string

Do not use newlines, numbers, or scene labels

‚úÖ Example:
If groups are [[1, 2], [3, 4], [5]], return:

soft ambient texture, light pulsing synth, mellow string drone

üîπ Part 3: Scene Grouping
Return only the raw grouping of scenes as a list of lists, using 1-based indexing (skip Scene 0).

Rules:

Include every scene ‚â• Scene 1

Group short scenes with neighbors (do not skip them)

Each group must total at least 10 seconds, based on scene_durations

üìå Format (no explanation, just the list):


[[1, 2], [3, 4, 5], [6]]
‚úÇÔ∏è Delimiter Between Sections
Separate Part 1, Part 2, and Part 3 using this exact line:


////
